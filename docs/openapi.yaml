openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/stock/set:
    put:
      tags:
      - stock-controller
      operationId: set
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/productos/{id}:
    get:
      tags:
      - producto-controller
      operationId: getProducto
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - producto-controller
      operationId: actualizarProducto
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - producto-controller
      operationId: eliminar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/movimientos/{id}:
    get:
      tags:
      - movimiento-controller
      operationId: getMovimiento
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - movimiento-controller
      operationId: updateMovimiento
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/categorias/{id}:
    get:
      tags:
      - categoria-controller
      operationId: getCategoria
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - categoria-controller
      operationId: actualizarCategoria
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - categoria-controller
      operationId: eliminar_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/wishlist/products/{productoId}:
    post:
      tags:
      - wishlist-controller
      operationId: add
      parameters:
      - name: productoId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - wishlist-controller
      operationId: remove
      parameters:
      - name: productoId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres:
    get:
      tags:
      - taller-controller
      operationId: listMyTalleres
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - taller-controller
      operationId: crearTaller
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/{tallerId}/miembros/{memberUserId}/promote:
    post:
      tags:
      - taller-member-controller
      operationId: promote
      parameters:
      - name: tallerId
        in: path
        required: true
        schema:
          type: string
      - name: memberUserId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/{tallerId}/miembros/{memberUserId}/demote:
    post:
      tags:
      - taller-member-controller
      operationId: demote
      parameters:
      - name: tallerId
        in: path
        required: true
        schema:
          type: string
      - name: memberUserId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/{tallerId}/invitaciones/codigo:
    post:
      tags:
      - taller-controller
      operationId: crearInvitacionCodigo
      parameters:
      - name: tallerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/{tallerId}/almacenes:
    post:
      tags:
      - taller-controller
      operationId: crearAlmacen
      parameters:
      - name: tallerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/invitaciones/accept:
    post:
      tags:
      - taller-controller
      operationId: acceptInvitacion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/stock/adjust:
    post:
      tags:
      - stock-controller
      operationId: adjust
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/productos:
    get:
      tags:
      - producto-controller
      operationId: listar
      parameters:
      - name: categoriaId
        in: query
        required: false
        schema:
          type: string
      - name: q
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - producto-controller
      operationId: crearProducto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/movimientos:
    get:
      tags:
      - movimiento-controller
      operationId: listar_1
      parameters:
      - name: productoId
        in: query
        required: false
        schema:
          type: string
      - name: tipo
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - movimiento-controller
      operationId: crearMovimiento
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovimientoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/facturas:
    get:
      tags:
      - factura-controller
      operationId: listarPorUsuario
      parameters:
      - name: userId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - factura-controller
      operationId: crearFactura
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/facturas/dto:
    post:
      tags:
      - factura-controller
      operationId: crearFacturaDTO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacturaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/facturas/checkout:
    post:
      tags:
      - factura-controller
      operationId: checkout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/categorias:
    get:
      tags:
      - categoria-controller
      operationId: listar_2
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - categoria-controller
      operationId: crearCategoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos:
    get:
      tags:
      - carrito-controller
      operationId: listarPorUsuario_1
      parameters:
      - name: usuarioId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - carrito-controller
      operationId: crear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarritoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos/{id}/items:
    post:
      tags:
      - carrito-controller
      operationId: addItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarritoItemRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos/{id}/clear:
    post:
      tags:
      - carrito-controller
      operationId: clear
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos/merge:
    post:
      tags:
      - carrito-controller
      operationId: merge
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/revoke-all:
    post:
      tags:
      - auth-controller
      operationId: revokeAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/refresh:
    post:
      tags:
      - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/oauth/google:
    post:
      tags:
      - auth-controller
      operationId: oauthGoogle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/oauth/facebook:
    post:
      tags:
      - auth-controller
      operationId: oauthFacebook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/logout:
    post:
      tags:
      - auth-controller
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/admin/users:
    post:
      tags:
      - admin-user-controller
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/productos/{id}/stock:
    patch:
      tags:
      - producto-controller
      operationId: ajustarStock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/wishlist:
    get:
      tags:
      - wishlist-controller
      operationId: list
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/wishlist/products/{productoId}/is:
    get:
      tags:
      - wishlist-controller
      operationId: isFav
      parameters:
      - name: productoId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/stock:
    get:
      tags:
      - stock-controller
      operationId: getByProducto
      parameters:
      - name: productoId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - stock-controller
      operationId: delete
      parameters:
      - name: productoId
        in: query
        required: true
        schema:
          type: string
      - name: almacenId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/facturas/{id}:
    get:
      tags:
      - factura-controller
      operationId: getFactura
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/facturas/numero/{numero}:
    get:
      tags:
      - factura-controller
      operationId: getPorNumero
      parameters:
      - name: numero
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos/{id}:
    get:
      tags:
      - carrito-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - carrito-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/me:
    get:
      tags:
      - auth-controller
      operationId: me
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/talleres/{tallerId}/miembros/{memberUserId}:
    delete:
      tags:
      - taller-member-controller
      operationId: remove_1
      parameters:
      - name: tallerId
        in: path
        required: true
        schema:
          type: string
      - name: memberUserId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/carritos/{id}/items/{productoId}:
    delete:
      tags:
      - carrito-controller
      operationId: removeItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: productoId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ProductoRequest:
      required:
      - nombre
      type: object
      properties:
        idString:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        precio:
          type: number
          format: double
        stock:
          minimum: 0
          type: integer
          format: int32
        categoriaId:
          type: string
        imagenRecurso:
          type: integer
          format: int32
        listaMedios:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        specs:
          type: object
          additionalProperties:
            type: string
    MovimientoRequest:
      required:
      - productoId
      - tipo
      type: object
      properties:
        tipo:
          type: string
        productoId:
          type: string
        cantidad:
          minimum: 1
          type: integer
          format: int32
        referencia:
          type: string
        notas:
          type: string
        realizadoPor:
          pattern: ^[a-fA-F0-9]{24}$
          type: string
    CategoriaRequest:
      required:
      - nombre
      type: object
      properties:
        idString:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        iconoRecurso:
          type: integer
          format: int32
    ClienteRequest:
      type: object
      properties:
        nombre:
          type: string
        documento:
          type: string
        direccion:
          type: string
    FacturaItemRequest:
      required:
      - cantidad
      - precioUnitario
      - productoId
      type: object
      properties:
        productoId:
          type: string
        cantidad:
          minimum: 1
          type: integer
          format: int32
        precioUnitario:
          type: number
          format: double
    FacturaRequest:
      required:
      - items
      type: object
      properties:
        numeroFactura:
          type: string
        clienteId:
          type: string
        cliente:
          $ref: '#/components/schemas/ClienteRequest'
        items:
          type: array
          items:
            $ref: '#/components/schemas/FacturaItemRequest'
        total:
          type: number
          format: double
        realizadoPor:
          type: string
        estado:
          type: string
    CarritoItemRequest:
      required:
      - cantidad
      - productoId
      type: object
      properties:
        productoId:
          type: string
        cantidad:
          minimum: 1
          type: integer
          format: int32
    CarritoRequest:
      type: object
      properties:
        usuarioId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CarritoItemRequest'
        realizadoPor:
          type: string
    RegisterRequest:
      required:
      - apellido
      - email
      - nombre
      - password
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        nombre:
          type: string
        apellido:
          type: string
        inviteCode:
          type: string
    LoginRequest:
      required:
      - password
      - usernameOrEmail
      type: object
      properties:
        usernameOrEmail:
          type: string
        password:
          type: string
        device:
          type: string
    CreateAdminRequest:
      required:
      - apellido
      - email
      - nombre
      - password
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        nombre:
          type: string
        apellido:
          type: string
        roles:
          type: array
          items:
            type: string
        adminKey:
          type: string
